apiVersion: v1
kind: Pod
metadata:
  name: secret-pod
  namespace: larry
spec:
  volumes:
  - name: moe
    secret:
      secretName: moe
  containers:
  - name: busybox
    image: busybox:1.33.1
    command: ['sh', '-c', 'cat /etc/credentials/username; cat /etc/credentials/password; while true; do sleep 5; done']
    volumeMounts:
      - name: moe
        readOnly: true
        mountPath: "/etc/credentials"


        aws-cfn-bootstrap-py3-latest.tar.gz  password.txt  secret-pod.yml  username.txt
cloud_user@k8s-cli:~$ vi secret-pod.yml
cloud_user@k8s-cli:~$ k create -f secret-pod.yml
pod/secret-pod created
cloud_user@k8s-cli:~$ k get pod -n larry
NAME         READY   STATUS    RESTARTS   AGE
secret-pod   1/1     Running   0          15s
cloud_user@k8s-cli:~$ k exec -n larry secret-pod -it -- sh
/ # env
KUBERNETES_SERVICE_PORT=443
KUBERNETES_PORT=tcp://10.96.0.1:443
HOSTNAME=secret-pod
SHLVL=1
HOME=/root
TERM=xterm
KUBERNETES_PORT_443_TCP_ADDR=10.96.0.1
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
KUBERNETES_PORT_443_TCP_PORT=443
KUBERNETES_PORT_443_TCP_PROTO=tcp
KUBERNETES_SERVICE_PORT_HTTPS=443
KUBERNETES_PORT_443_TCP=tcp://10.96.0.1:443
KUBERNETES_SERVICE_HOST=10.96.0.1
PWD=/
/ # cd /etc/credentials/
/etc/credentials # ls
password  username
/etc/credentials # cat username
/etc/credentials # cat password
QTgzTWFlS296Cg==/etc/credentials #

cloud_user@k8s-control:~$ kubectl get secrets -n users -o yaml
apiVersion: v1
items:
- apiVersion: v1
  data:
    password: aHVudGVyMgo=
  kind: Secret
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"password":"aHVudGVyMgo="},"kind":"Secret","metadata":{"annotations":{},"name":"db-pass","namespace":"users"},"type":"Opaque"}
    creationTimestamp: "2024-01-04T04:23:33Z"
    name: db-pass
    namespace: users
    resourceVersion: "547"
    uid: 4cfd1e77-98f9-4d5a-b490-a268a824700f
  type: Opaque
kind: List
metadata:
  resourceVersion: ""
cloud_user@k8s-control:~$ echo aHVudGVyMgo= | base64 -f
base64: invalid option -- 'f'
Try 'base64 --help' for more information.
cloud_user@k8s-control:~$ echo aHVudGVyMgo= | base64 -d
hunter2
cloud_user@k8s-control:~$

Volumes:
  db-pass:
    Type:        Secret (a volume populated by a Secret)
    SecretName:  db-pass
    Optional:    false
  kube-api-access-65bs6:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    ConfigMapOptional:       <nil>
    DownwardAPI:             true
QoS Class:                   BestEffort
Node-Selectors:              <none>
Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:
  Type    Reason     Age   From               Message
  ----    ------     ----  ----               -------
  Normal  Scheduled  16s   default-scheduler  Successfully assigned users/users-api to k8s-worker1
  Normal  Pulled     15s   kubelet            Container image "nginx:1.14.2" already present on machine
  Normal  Created    14s   kubelet            Created container nginx
  Normal  Started    14s   kubelet            Started container nginx
cloud_user@k8s-control:~$ kubectl exec -n users users-api -it -- sh
# ls
bin  boot  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var
# cd /etc/
# ls
adduser.conf            debconf.conf    fstab      hostname     ld.so.conf     mke2fs.conf    pam.d      rc2.d        rmt        skel                       timezone
alternatives            debian_version  gai.conf   hosts        ld.so.conf.d   motd           passwd     rc3.d        securetty  ssl                        ucf.conf
apt                     default         group      init.d       libaudit.conf  nginx          passwd-    rc4.d        security   staff-group-for-usr-local  update-motd.d
bash.bashrc             deluser.conf    group-     issue        localtime      nsswitch.conf  profile    rc5.d        selinux    subgid
bindresvport.blacklist  dpkg            gshadow    issue.net    login.defs     opt            profile.d  rc6.d        shadow     subuid
cron.daily              environment     gshadow-   kernel       logrotate.d    os-release     rc0.d      rcS.d        shadow-    systemd
dbpass                  fonts           host.conf  ld.so.cache  machine-id     pam.conf       rc1.d      resolv.conf  shells     terminfo
# cat db-pass
cat: db-pass: No such file or directory
# cd db-pass
sh: 5: cd: can't cd to db-pass
# pwd
/etc
# cat dbpass
cat: dbpass: Is a directory
# cd dbpass
# ls
password
# cat password
TrustNo1
#